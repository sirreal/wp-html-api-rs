name: Benchmark

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  benchmark-wp-html-api:
    name: Rust benchmarks
    runs-on: codspeed-macro
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: moonrepo/setup-rust@v1.2.2
        with:
          bins: cargo-codspeed
          cache-base: main
          cache-target: release
          channel: stable

      - name: Build the benchmark target(s)
        run: cargo codspeed build -p wp-html-api

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run -p wp-html-api
          token: ${{ secrets.CODSPEED_TOKEN }}

  benchmark-wp-html-api-wasm:
    name: WASM benchmarks
    runs-on: codspeed-macro
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          channel: stable

      - name: Build the benchmark target(s)
        run: wasm-pack build --release --no-pack --target=nodejs --out-dir="../../pkg-node"  crates/wp-html-api-wasm --quiet

      - uses: "actions/setup-node@v3"
      - name: Install dependencies
        run: npm ci
        working-directory: ./crates/wp-html-api-wasm/benches
      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: npm exec vitest bench --run
          token: ${{ secrets.CODSPEED_TOKEN }}
          working-directory: ./crates/wp-html-api-wasm/benches
